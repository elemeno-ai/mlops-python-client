name: Tag release
on:
  push:
    branches:
      - '*'
    tags:
      - '*'
  pull_request:
    branches:
      - '*'
jobs:
  publish:
    if: ${{ contains(github.ref_name, 'RELEASE') }}
    runs-on: ubuntu-latest
    name: Python 3.8
    steps:
      - uses: actions/checkout@v3
      #TODO add a step for running unit tests
      - name: Setup python
        uses: actions/setup-python@v3
        with:
          python-version: 3.8
          architecture: x64
      - run: pip install -r requirements-dev.txt
      - name: Publish to pypi
        env:
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
        run: make pip-pypi
  deploy-docs:
    runs-on: ubuntu-latest
    needs:
      - publish
    name: Deploy docs to k8s
    steps:
      - name: Cancel Previous Runs               
        uses: styfle/cancel-workflow-action@0.4.1
        with:                                    
          access_token: ${{ github.token }}
      - uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}           
        with:                                                    
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}        
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Login to Amazon ECR            
        id: login-ecr                        
        uses: aws-actions/amazon-ecr-login@v1
      - name: Set up Docker Buildx                             
        id: buildx                                             
        uses: docker/setup-buildx-action@master                
      - name: Docker cache layers                              
        uses: actions/cache@v2                                 
        with:                                                  
          path: /tmp/.buildx-cache                             
          key: ${{ runner.os }}-single-buildx-${{ github.sha }}
          restore-keys: |                                      
            ${{ runner.os }}-single-buildx
      - name: Build & Push Image                                                                                      
        env:
          RELEASE_IMAGE: ${{ steps.login-ecr.outputs.registry }}/python-sdk-docs:${{ github.ref_name }}
        run: |
          docker buildx create --use

          docker buildx build \
            -f etc/docs/docker/Dockerfile \
            --cache-from=type=local,src=/tmp/.buildx-cache \
            --cache-to=type=local,dest=/tmp/.buildx-cache-new \
            --tag ${{ env.RELEASE_IMAGE }} \
            . \
            --push                                           

          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      - name: Update Knative Service
        uses: redhat-actions/kn-service-manager@v1
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
          KUBE_NAMESPACE: front
          RELEASE_IMAGE: ${{ steps.login-ecr.outputs.registry }}/python-sdk-docs:${{ github.ref_name }}
        with:
          command: update
          service_name: docs-front
          container_image: ${{ env.RELEASE_IMAGE }}
          namespace: ${{ env.KUBE_NAMESPACE }}